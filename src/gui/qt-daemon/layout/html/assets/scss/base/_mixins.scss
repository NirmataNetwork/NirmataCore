@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
@mixin textWrap {
  white-space: normal;
  overflow-wrap: break-word;
  word-wrap: break-word;
  word-break: break-all;
  line-break: strict;
  -webkit-hyphens: auto;
  -ms-hyphens: auto;
  hyphens: auto;
}
@mixin coverBox {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}
@mixin abs ($top: auto, $right: auto, $bottom: auto, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}
@mixin coverImg {
	background-repeat: no-repeat;
	-webkit-background-size: cover;
	-o-background-size: cover;
	background-size: cover;
	background-position: 50% 50%;
}
@mixin valingBox {
	position: absolute;
	top:  50%;
	left: 50%;
	transform: translate(-50%, -50%);
}
@mixin unSelect {
	-webkit-touch-collout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
@mixin max1920 { // maket 1920
  @media (max-width: 1920px) { @content; }
}
@mixin max1199 { // maket 1171
  @media (max-width: 1199px) { @content; }
}
@mixin max1170 { // makets 992
  @media (max-width: 1170px) { @content; }
}
@mixin max991 { // makets 762
  @media (max-width: 991px) { @content; }
}
@mixin max761 { // makets 576
  @media (max-width: 761px) { @content; }
}
@mixin max575 { // makets 400
  @media (max-width: 575px) { @content; }
}
@mixin mobile {
  @media (max-width: 399px) { @content; }
}
@mixin icoCenter {
    background-repeat: no-repeat;
    background-position: center center;
}
@mixin pseudo ($display: block, $pos: absolute, $content: ''){
  content: $content;
  display: $display;
  position: $pos;
}

/*
* Implementation of themes
*/
@mixin themify($themes: $themes) {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function themed($key) {
  @return map-get($theme-map, $key);
}
